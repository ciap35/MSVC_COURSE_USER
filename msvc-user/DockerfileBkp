ARG MSVC_NAME=msvc-users
FROM openjdk:17-jdk-alpine as builder
ARG MSVC_NAME
WORKDIR /app/$MSVC_NAME
COPY ./pom.xml  /app
COPY ./$MSVC_NAME/pom.xml .
COPY ./$MSVC_NAME/.mvn ./.mvn
COPY ./$MSVC_NAME/mvnw .

RUN ./mvnw clean package -Dmaven.test.skip -Dmaven.main.skip -Dspring-boot.repackage.skip && rm -r ./target
#RUN ./mvnw dependency:go-offline
COPY ./$MSVC_NAME/src ./src

RUN ./mvnw clean package -DskipTests

FROM openjdk:17-jdk-alpine
ARG MSVC_NAME
WORKDIR /app
RUN mkdir ./logs
ARG TARGET_FOLDER=/app/$MSVC_NAME/target
#Se copia el snapshot a /app y el workdir es donde comienza el container
COPY --from=builder $TARGET_FOLDER/msvc-users-0.0.1-SNAPSHOT.jar .
ARG PORT_APP=8001
ENV PORT $PORT_APP
EXPOSE $PORT

#ENTRYPOINT ["java","-jar","./target/msvc-users-0.0.1-SNAPSHOT.jar"]
FROM curlimages/curl

CMD ["java","-jar","msvc-users-0.0.1-SNAPSHOT.jar"]

# construir imagen con tag msvc-users, indicar el path del dockerfile
#docker build -t msvc-users . -f .\msvc-users\Dockerfile
#docker run -p 8001:8001 --rm -it msvc-users /bin/sh
