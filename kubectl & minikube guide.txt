kubectl delete -f .\configmap.yaml -f .\secret.yaml 
kubectl delete -f .\pv-postgres.yaml -f .\pvc-postgres.yaml -f .\svc-postgres.yaml -f .\deployment-postgres.yaml
kubectl delete -f .\pv-mysql.yaml -f .\pvc-mysql.yaml -f .\svc-mysql.yaml -f .\deployment-mysql.yaml
kubectl delete -f .\deployment-postgres.yaml -f .\deployment-mysql
kubectl delete -f .\deployment-postgres.yaml -f .\deployment-mysql
kubectl delete -f .\auth.yaml
kubectl delete -f .\deployment-msvc-user.yaml -f .\deployment-msvc-course.yaml
kubectl delete -f .\svc-msvc-user.yaml -f .\svc-msvc-course.yaml
kubectl delete -f .\gateway.yaml




kubectl apply -f .\configmap.yaml -f .\secret.yaml 
kubectl apply -f .\pv-postgres.yaml -f .\pvc-postgres.yaml -f .\svc-postgres.yaml -f .\deployment-postgres.yaml
kubectl apply -f .\pv-mysql.yaml -f .\pvc-mysql.yaml -f .\svc-mysql.yaml -f .\deployment-mysql.yaml
kubectl apply -f .\svc-msvc-user.yaml -f .\svc-msvc-course.yaml
kubectl apply -f .\deployment-msvc-course.yaml
kubectl apply -f .\gateway.yaml
kubectl apply -f .\auth.yaml
#Get URLS from load balancer for msvc-user and msvc-auth, put into configMap and apply again.
kubectl apply -f .\configmap.yaml
#Once we got everything configured, we can deploy msvc-user because it will try to authenticate against OAUTH server from msvc-auth
kubectl apply -f .\deployment-msvc-user.yaml



#GET external address
minikube service msvc-gateway --url
minikube service msvc-auth --url
minikube service msvc-user --url


#DOCKER useful commands
docker build -t msvc-user:v1.7 . -f .\msvc-user\Dockerfile
docker tag msvc-user:v1.7 ciap35/msvc-user:v1.7
docker push ciap35/msvc-user:v1.7

docker build -t msvc-course:v1.6 . -f .\msvc-course\Dockerfile
docker tag msvc-course:v1.6 ciap35/msvc-course:v1.6
docker push ciap35/msvc-course:v1.6

docker build -t msvc-gateway:v1.0 . -f .\msvc-gateway\Dockerfile 
docker tag msvc-gateway:v1.0 ciap35/msvc-gateway:v1.0
docker push ciap35/msvc-gateway:v1.0

docker build -t msvc-auth:v1.1 . -f .\msvc-auth\Dockerfile
docker tag msvc-auth:v1.1 ciap35/msvc-auth:v1.1
docker push ciap35/msvc-auth:v1.1


#After everything it's working
#Accesing through MSVC-USER
default msvc-auth url to login and get access code for user-client:
http://192.168.23.176:30811/oauth2/authorization/msvc-user-client
#Accesing through OAUTH URL
Request to OAUTH Server authentication and force add scope write if it's not configured in application.yml in msvc-user
http://192.168.23.176:31066/oauth2/authorize?response_type=code&client_id=user-client&scope=read%20write&redirect_uri=http://192.168.23.176:30811/authorized


#Interact with the MYSQL POD through Shell
kubectl exec -it <POD NAME> -- /bin/sh
mysql -h localhost -P 3306 -u root -p
SHOW DATABASES;
USE msvc_user;
SHOW tables;
SELECT * FROM USERS;
#Interact with the POSTGRES POD through Shell
kubectl exec -it <POD NAME> -- /bin/sh
psql -h localhost -U postgres -d msvc_course
\dt    #SHOW TABLES
select * from course_user;
select * from courses;
insert into course_user(user_id,course_id) values(1,1);
