apiVersion: apps/v1
kind: Deployment
metadata:
  name: msvc-course
spec:
  replicas: 1
  selector:
    matchLabels:
      app: msvc-course
  template:
    metadata:
      labels:
        app: msvc-course
    spec:
      containers:
        - name: msvc-course
          image: ciap35/msvc-course:v1.5
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
          env:
            - name: PORT
              #value: "8002"
              valueFrom:
                configMapKeyRef:
                  name: msvc-course
                  key: port
            - name: DB_HOST
              #value: postgres14:5432
              valueFrom:
                configMapKeyRef:
                  name: msvc-course
                  key: db_host
            - name: DB_DATABASE
              #value: msvc_course
              valueFrom:
                configMapKeyRef:
                  name: msvc-course
                  key: database
            - name: DB_USER
              #value: postgres
              valueFrom:
                #configMapKeyRef:
                secretKeyRef:
                  name: msvc-course
                  key: username
            - name: DB_PWD
              #value: postgres
              valueFrom:
                #configMapKeyRef:
                secretKeyRef:
                  name: msvc-course
                  key: password
            - name: USER_URL
              #value: msvc-user:8001
              valueFrom:
                configMapKeyRef:
                  name: msvc-course
                  key: user.url
          #Actuator config
#          readinessProbe:
#            httpGet:
#              path: /actuator/health/readiness
#              port: 8002
#              scheme: HTTP
#            initialDelaySeconds: 5
#            periodSeconds: 20
#            timeoutSeconds: 10
#          livenessProbe:
#            httpGet:
#              path: /actuator/health/liveness
#              port: 8002
#              scheme: HTTP
#            initialDelaySeconds: 10
#            periodSeconds: 30
#            timeoutSeconds: 10
#          resources:
#            requests:
#              memory: "512Mi" #Ram capacity in Megabytes
#              cpu: "400m" #MiliCpu's where 1000m = 1cpu, 400m represents 40% of 1 cpu
#            limits:
#              memory: "1024Mi"
#              cpu: "500m" #Limit of 50% of the CPU